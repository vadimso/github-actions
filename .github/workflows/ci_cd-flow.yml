name: CI/CD

on:
  push:
    branches:
      - develop
  workflow_dispatch:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20' # Use a valid Node.js version


name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - develop
  workflow_dispatch:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Registry
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login <your-private-registry> -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker buildx build --platform linux/amd64,linux/arm64 -t <your-private-registry>/<image-name>:latest .
        docker push <your-private-registry>/<image-name>:latest

    - name: Deploy to Kubernetes
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      run: |
        mkdir -p ~/.kube
        echo "$KUBE_CONFIG_DATA" | base64 -d > ~/.kube/config
        kubectl set image deployment/<deployment-name> <container-name>=<your-private-registry>/<image-name>:latest

    - name: Get service external IP
      id: get-ip
      run: |
        sleep 10 # Wait for service to get an external IP
        kubectl get svc <service-name> -o=jsonpath='{.status.loadBalancer.ingress[0].ip}'

    - name: Output service external IP
      run: echo "Service External IP: ${{ steps.get-ip.outputs }}"
