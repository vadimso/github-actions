name: CI/CD

on:
  push:
    branches:
      - develop
  workflow_dispatch:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
        node-version: '20'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup kubectl
        uses: docker://lachlanevenson/k8s-kubectl
        with:
          args: |
            config set-cluster my-cluster --server=https://<your-k8s-server> --certificate-authority=ca.crt --embed-certs=true
            config set-credentials user --token=${{ secrets.KUBE_CONFIG_TOKEN }}
            config set-context my-cluster-context --cluster=my-cluster --namespace=<your-k8s-namespace> --user=user
            config use-context my-cluster-context

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin <your-docker-registry>
          docker buildx build --platform linux/amd64,linux/arm64 -t <your-docker-registry>/my-image:${{ github.sha }} .
          docker push <your-docker-registry>/my-image:${{ github.sha }}

      - name: Deploy to Kubernetes
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig
          kubectl apply -f deployment.yaml

          # Get the external IP
          echo "Service external IP:"
          kubectl get service -o=jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}'

