

name: CI/CD Workflow

on:
  push:
    branches:
      - main


jobs:
  setup-cluster-and-registry:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20' # Use a valid Node.js version

      - name: Checkout code
        uses: actions/checkout@v3

    

      - name: Set up kind
        uses: docker://kindest/node:v1.21.2
        with:
          args:
            install
            --install-path=/usr/local/bin
            --symlink

      - name: Create Kubernetes cluster
        run: |
          kind create cluster --name my-cluster
          kubectl cluster-info --context kind-my-cluster

      - name: Set up private Docker registry
        run: |
          kubectl create secret docker-registry my-registry-secret --docker-server=<your-registry-server> --docker-username=<your-registry-username> --docker-password=<your-registry-password> --docker-email=<your-registry-email>
          kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "my-registry-secret"}]}'

  build-and-deploy:
    
    runs-on: ubuntu-latest
    needs: setup-cluster-and-registry
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t my-image .
          docker tag my-image <your-registry-server>/my-image
          docker push <your-registry-server>/my-image

      - name: Deploy to Kubernetes cluster
        run: |
          kubectl apply -f deployment.yaml
          kubectl rollout status deployment/my-deployment
          echo "Service External IP:"
          kubectl get svc my-service -o=jsonpath='{.status.loadBalancer.ingress[0].ip}'
